name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      SYNC_URL:
        description: 'SYNC_URL'
        required: true
        default: 'https://gitlab.com/OrangeFox/sync.git'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: '9.0'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/try-01/ofrp_device_realme_RMX1805'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'fox_9.0_P'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/realme/RMX1805'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'RMX1805'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'omni_RMX1805'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'
      
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
      id: pwd

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Force Git to use HTTPS for GitLab
      run: git config --global url."https://gitlab.com/".insteadOf "git@gitlab.com:"

    - name: Prepare the build environment
      run: |
        export JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64
   
        sudo apt install git aria2 -y
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sed -i 's/cd -/cd ../g' setup/install_android_sdk.sh
        sudo bash setup/install_android_sdk.sh
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync OrangeFox sources and minimal manifest
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}
        git clone ${{ github.event.inputs.SYNC_URL }}
        cd sync/legacy
        ./orangefox_sync_legacy.sh --branch ${{ github.event.inputs.MANIFEST_BRANCH }} --path ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone device tree
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

#    - name: Disable Hardware Encryption
#      run: |
#        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
#        sed -i 's/TARGET_HW_DISK_ENCRYPTION := true/TARGET_HW_DISK_ENCRYPTION := false/g' ${{ github.event.inputs.DEVICE_PATH }}/BoardConfig.mk
#      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

#    - name: Sync Device Dependencies
#      run: |
#        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        # 5. PERBAIKAN: Hapus direktori yang berkonflik SEBELUM sinkronisasi
 #       rm -rf bootable/recovery device/qcom/common
#        repo sync -j2
#      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Set up Python 2
      run: |
        sudo apt-get update
        sudo apt-get install -y python2
        sudo ln -sf /usr/bin/python2 /usr/bin/python
      continue-on-error: true

    - name: Building recovery
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        echo "Applying source code modifications..."
        sed -i '/^bool verify_package_compatibility(ZipWrap \*zw) {/,/^}/c bool verify_package_compatibility(ZipWrap *zw) { // NOLINT\n   printf("OrangeFox: Forcefully bypassing Treble compatibility check via patch.\\n");\n   return true;\n}' "./bootable/recovery/installcommand.cpp"
        echo "Done applying modifications."
        set +e
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        make clean && mka ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
   #   continue-on-error: true

    - name: Check the output directory before uploading
      run: |
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/
        echo
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
          ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
